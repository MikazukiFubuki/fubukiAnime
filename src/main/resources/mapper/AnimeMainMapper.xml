<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fubukianime.dao.AnimeMainDao">

    <resultMap id="BaseResultMap" type="com.fubukianime.domain.AnimeMain">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="score" column="score" jdbcType="DOUBLE"/>
            <result property="source1" column="source_1" jdbcType="INTEGER"/>
            <result property="source2" column="source_2" jdbcType="INTEGER"/>
            <result property="source3" column="source_3" jdbcType="INTEGER"/>
            <result property="type1" column="type_1" jdbcType="INTEGER"/>
            <result property="type2" column="type_2" jdbcType="INTEGER"/>
            <result property="type3" column="type_3" jdbcType="INTEGER"/>
            <result property="completeId" column="complete_id" jdbcType="INTEGER"/>
            <result property="bingeWatchingType" column="binge_watching_type" jdbcType="INTEGER"/>
            <result property="originalEnd" column="original_end" jdbcType="INTEGER"/>
            <result property="status" column="status" jdbcType="INTEGER"/>
            <result property="broadcastEndYear" column="broadcast_end_year" jdbcType="OTHER"/>
            <result property="favoriteHeroine" column="favorite_heroine" jdbcType="VARCHAR"/>
            <result property="bingeWatchingId" column="binge_watching_id" jdbcType="INTEGER"/>
            <result property="create" column="create" jdbcType="INTEGER"/>
            <result property="sexLimit" column="sex_limit" jdbcType="INTEGER"/>
            <result property="completeQuarter" column="complete_quarter" jdbcType="INTEGER"/>
            <result property="bingeWatchingQuarter" column="binge_watching_quarter" jdbcType="INTEGER"/>
            <result property="broadcastStartYear" column="broadcast_start_year" jdbcType="OTHER"/>
            <result property="animationEnd" column="animation_end" jdbcType="INTEGER"/>
            <result property="leaderGender" column="leader_gender" jdbcType="INTEGER"/>
            <result property="reviewId" column="review_id" jdbcType="INTEGER"/>
            <result property="love" column="love" jdbcType="INTEGER"/>
            <result property="layoutId" column="layout_id" jdbcType="INTEGER"/>
    </resultMap>

        <select id="selectMainAll" resultType="com.fubukianime.domain.AnimeMain">
            select T0.id,
                   T0.name,
                   T0.score,
                   T2.source1,
                   T2.source2,
                   T2.source3,
                   T4.layoutId,
                   T3.type1,
                   T3.type2,
                   T3.type3,
                   T1.love,
                   T1.sex_limit sexLimit,
                   T1.`create`,
                   T0.binge_watching_id bingeWatchingId,
                   T0.complete_id completeId,
                   T0.review_id reviewId,
                   T1.leader_gender leaderGender,
                   T0.favorite_heroine favoriteHeroine,
                   T1.animation_end animationEnd,
                   T1.original_end originalEnd,
                   T0.broadcast_start_year broadcastStartYear,
                   T0.broadcast_end_year broadcastEndYear,
                   T1.binge_watching_type bingeWatchingType,
                   T1.bingeWatchingQuarter,
                   T1.completeQuarter,
                   T1.status

            from anime.anime_main T0,

                 (select a.id                  as ID1,
                         b.sex_limit,
                         c.love,
                         d.leader_gender,
                         e.animation_end,
                         f.original_end,
                         g.binge_watching_type,
                         h.quarter bingeWatchingQuarter,
                         i.quarter completeQuarter,
                         j.`create`,
                         k.status
                  from (((((((((anime.anime_main a
                      join anime.anime_sexlimit b
                      on a.sex_limit = b.id
                          or ifnull(a.sex_limit, 6) = b.id)
                      join anime.anime_love c
                      on a.love = c.id
                          or ifnull(a.love, 12) = b.id)
                      join anime.anime_leadergender d
                      on a.leader_gender = d.id
                          or ifnull(a.leader_gender, 12) = d.id)
                      join anime.anime_animationend e
                      on a.animation_end = e.id
                          or ifnull(a.animation_end, 5) = e.id)
                      join anime.anime_originalend f
                      on a.original_end = f.id
                          or ifnull(a.original_end, 8) = f.id)
                      join anime.anime_bingewatchingtype g
                      on a.binge_watching_type = g.id)
                      join anime.anime_quarter h
                      on a.binge_watching_quarter = h.id
                          or ifnull(a.binge_watching_quarter, 22) = h.id)
                      join anime_quarter i
                      on a.complete_quarter = i.id
                          or ifnull(a.complete_quarter, 22) = i.id)
                      join anime.anime_create j
                      on a.`create` = j.id)
                           join anime_status k
                                on a.status = k.id
                  group by a.id
                  order by a.id asc) as T1,

                 (select a.id ID2, b.source source1, c.source source2, d.source source3
                  from ((anime.anime_main a
                      join anime.anime_source b
                      on a.source_1 = b.id
                          or ifnull(a.source_1, 26) = b.id)
                      join anime.anime_source c
                      on a.source_2 = c.id
                          or ifnull(a.source_2, 26) = c.id)
                           join anime.anime_source d
                                on a.source_3 = d.id
                                    or ifnull(a.source_3, 26) = d.id
                  group by a.id
                 ) as T2,

                 (select a.id ID3, b.type type1, c.type type2, d.type type3
                  from ((anime.anime_main a
                      join anime.anime_type b
                      on a.type_1 = b.id
                          or ifnull(a.type_1, 127) = b.id)
                      join anime.anime_type c
                      on a.type_2 = c.id
                          or ifnull(a.type_2, 127) = c.id)
                           join anime.anime_type d
                                on a.type_3 = d.id
                                    or ifnull(a.type_3, 127) = d.id
                  group by a.id) as T3,

                 (select layout_id ID4, group_concat(t3.layout separator '、') layoutId
                  from (select t1.id,
                               t1.layout_id,
                               concat_ws('', t1.another_name, t2.layout_type, concat(t1.quarter_num, '季'), concat(t1.episodes, '集')) as layout
                        from anime_layout t1
                                 join anime_layout_type t2
                                      on t1.layout_type_id = t2.id
                        order by t1.layout_id) as t3
                  group by t3.layout_id) as T4

            WHERE T2.ID2 = T0.id
              AND T3.ID3 = T0.id
              AND T1.ID1 = T0.id
              AND T4.ID4 = T0.id
            ORDER BY T0.id ASC
        </select>
    <select id="selectMainById" resultType="com.fubukianime.domain.AnimeMain">
        select T0.id,
               T0.name,
               T0.score,
               T2.source1,
               T2.source2,
               T2.source3,
               T4.layoutId,
               T3.type1,
               T3.type2,
               T3.type3,
               T1.love,
               T1.sex_limit sexLimit,
               T1.`create`,
               T0.binge_watching_id bingeWatchingId,
               T0.complete_id completeId,
               T0.review_id reviewId,
               T1.leader_gender leaderGender,
               T0.favorite_heroine favoriteHeroine,
               T1.animation_end animationEnd,
               T1.original_end originalEnd,
               T0.broadcast_start_year broadcastStartYear,
               T0.broadcast_end_year broadcastEndYear,
               T1.binge_watching_type bingeWatchingType,
               T1.bingeWatchingQuarter,
               T1.completeQuarter,
               T1.status

        from anime.anime_main T0,

             (select a.id                  as ID1,
                     b.sex_limit,
                     c.love,
                     d.leader_gender,
                     e.animation_end,
                     f.original_end,
                     g.binge_watching_type,
                     h.quarter bingeWatchingQuarter,
                     i.quarter completeQuarter,
                     j.`create`,
                     k.status
              from (((((((((anime.anime_main a
                  join anime.anime_sexlimit b
                  on a.sex_limit = b.id
                      or ifnull(a.sex_limit, 6) = b.id)
                  join anime.anime_love c
                  on a.love = c.id
                      or ifnull(a.love, 12) = b.id)
                  join anime.anime_leadergender d
                  on a.leader_gender = d.id
                      or ifnull(a.leader_gender, 12) = d.id)
                  join anime.anime_animationend e
                  on a.animation_end = e.id
                      or ifnull(a.animation_end, 5) = e.id)
                  join anime.anime_originalend f
                  on a.original_end = f.id
                      or ifnull(a.original_end, 8) = f.id)
                  join anime.anime_bingewatchingtype g
                  on a.binge_watching_type = g.id)
                  join anime.anime_quarter h
                  on a.binge_watching_quarter = h.id
                      or ifnull(a.binge_watching_quarter, 22) = h.id)
                  join anime_quarter i
                  on a.complete_quarter = i.id
                      or ifnull(a.complete_quarter, 22) = i.id)
                  join anime.anime_create j
                  on a.`create` = j.id)
                  join anime_status k
                  on a.status = k.id
              group by a.id
              order by a.id asc) as T1,

             (select a.id ID2, b.source source1, c.source source2, d.source source3
              from ((anime.anime_main a
                  join anime.anime_source b
                  on a.source_1 = b.id
                      or ifnull(a.source_1, 26) = b.id)
                  join anime.anime_source c
                  on a.source_2 = c.id
                      or ifnull(a.source_2, 26) = c.id)
                       join anime.anime_source d
                            on a.source_3 = d.id
                                or ifnull(a.source_3, 26) = d.id
              group by a.id
             ) as T2,

             (select a.id ID3, b.type type1, c.type type2, d.type type3
              from ((anime.anime_main a
                  join anime.anime_type b
                  on a.type_1 = b.id
                      or ifnull(a.type_1, 127) = b.id)
                  join anime.anime_type c
                  on a.type_2 = c.id
                      or ifnull(a.type_2, 127) = c.id)
                       join anime.anime_type d
                            on a.type_3 = d.id
                                or ifnull(a.type_3, 127) = d.id
              group by a.id) as T3,

             (select layout_id ID4, group_concat(t3.layout separator '、') layoutId
              from (select t1.id,
                           t1.layout_id,
                           concat_ws('', t1.another_name, t2.layout_type, concat(t1.quarter_num, '季'), concat(t1.episodes, '集')) as layout
                    from anime_layout t1
                             join anime_layout_type t2
                                  on t1.layout_type_id = t2.id
                    order by t1.layout_id) as t3
              group by t3.layout_id) as T4

        WHERE T2.ID2 = T0.id
          AND T3.ID3 = T0.id
          AND T1.ID1 = T0.id
          AND T4.ID4 = T0.id
          AND T0.id = #{id}
        ORDER BY T0.id ASC
    </select>

    <!--<sql id="Base_Column_List">
        id,name,score,
        source_1,source_2,source_3,
        type_1,type_2,type_3,
        complete_id,binge_watching_type,original_end,
        status,broadcast_end_year,favorite_heroine,
        binge_watching_id,create,sex_limit,
        complete_quarter,binge_watching_quarter,broadcast_start_year,
        animation_end,leader_gender,review_id,
        love,layout_id
    </sql>-->
</mapper>
